Project 4

For this iteration of the project, it was decided that most of the work would be done outside of the meetings
With some of it done during the meeting when a group member needed help.
As stated in the other document the work was divided up as follows:
Ben and Paul worked on the rotation functionality
Blake worked on randomizing the initial order of the tile placements
Nikita worked on randomizing the number of initial tile replacements 
Dylan helped out group members when they got stuck on their part of the project as well as made the UML
Ben and Paul also worked on the planning and meeting minutes.


Project 3
Notes on what occurred during meetings. The group met several times from the time
we got back from spring break to when the project was turned in. Some work was done
outside of the meetings while some was done during the meetings.

Specifically Dylan worked on the reset function and coded the classes needed to read the file
while the rest of the group worked on actually reading the file.
Individual members also worked on debugging the code to see where things were going wrong

Members who felt as if they hadn't contributed to the coding enough wrote the meeting minutes as well as the UML

To be more specific:
Dylan:Coded reset functionality and designed classes to be used for file reading and help the others if they got stuck
Everyone else: Work on getting the program to read the file and use the data to draw lines on the maze.
 Blake and Nikita did the most coding on this part
Benjamin and Paul -Design the UML 
Benjamin - Write the meeting minutes and edit the code so that it looked better and better fit the style guide
Also deleted unnecessary code




// Project 2

// Plan

Blake, Paul, Ben, Nikita:

Create Action Listeners to register Tile presses, and allow select 
and place movement functionality.

Dylan:
UML updates, assist when asked for all other tasks.

//Specifics: 
Nikita:
Create Actionlistener for all Components, specifically register presses outside
a tile.

Blake, Ben, Paul:
Send data of each Tile when Tile is moved, format and write all data transfer 
code. Allow tiles to be moved to any open spot.





//Users Guide:

When a Tile is clicked, it will slightly change color to inform the user which 
Tile is about to be moved. Clicking on any other information Tile will cancel 
the selection and wait for more input. Clicking an empty space will move the 
selected Tile to the empty Tile and wait for more input. The only functional menu 
button is the Quit button which merely exits the program.